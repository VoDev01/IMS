@model MoviePage

@{
    if (Model == null)
        ViewData["Title"] = "Error/Not Found";
    else
        ViewData["Title"] = Model.NameRu ?? "Not Found";

    string? altCoverName = Model.NameRu ?? Model.NameEn;
    string title = "";
    if (Model.Year != null)
    {
        title = $"{Model.NameRu} ({Model.Year.ToString()})";
    }
    else if(Model.StartYear != null && Model.EndYear != null)
    {
        title = $"{Model.NameRu} ({Model.StartYear.ToString()} - {Model.EndYear.ToString()})";
    }
}

@section Scripts{
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
}

<h2>
    @title
</h2>
<h3>
    @Html.DisplayFor(modelItem => modelItem.NameEn)
</h3>
<blockquote class="blockquote">
    @Html.DisplayFor(modelItem => modelItem.Slogan)
</blockquote>
<p>
    @Html.DisplayFor(modelItem => modelItem.Description)
</p>
<p>
    @Html.DisplayFor(modelItem => modelItem.ShortDescription)
</p>
@{
}
<img alt="Постер @altCoverName" src="@Model.PosterUrlPreview">
<p>
   Кинопоиск: @Model.RatingKinopoisk
</p>
<p>
   IMDB: @Model.RatingImdb
</p>
<p>
    <a class="link-primary text-decoration-none" href="@Model.WebUrl">Страница на кинопоиске</a>
</p>
@if (Model.FilmLenght != null)
{
    <p>
        @Model.FilmLenght
    </p>
}
@if (Model.EditorAnnotation != null)
{
    <p>
        @Model.EditorAnnotation
    </p>
}
<p>
    @Model.RatingAgeLimits
</p>

<ul>
    @foreach (var error in ViewData.ModelState.SelectMany(x => x.Value.Errors))
    {
        <li>@error.ErrorMessage</li>
    }
</ul>